buildscript {
    ext {
        kotlinVersion = '1.1.51'
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'

group = 'com.equalexperts'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}"
    compile "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"

    def feignVersion = "10.1.0"
    def jacksonVersion = "2.8.7"

    compile "com.natpryce:konfig:1.6.1.0"

    //feign + okhttp
    compile "io.github.openfeign:feign-core:${feignVersion}"
    compile "io.github.openfeign:feign-jackson:${feignVersion}"
    compile "io.github.openfeign:feign-okhttp:${feignVersion}"
    compile "io.github.openfeign:feign-slf4j:${feignVersion}"

    //feign uses an older version of jackson so force a newer one
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    compile "com.fasterxml.jackson.module:jackson-modules-java8:${jacksonVersion}"

    compile 'org.slf4j:slf4j-api:1.7.2'
    compile 'ch.qos.logback:logback-classic:1.0.9'
    compile 'ch.qos.logback:logback-core:1.0.9'

    compile "com.amazonaws:aws-lambda-java-core:1.1.0"
    compile "com.amazonaws:aws-lambda-java-events:1.3.0"

    testCompile "junit:junit:4.12"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
    testCompile "com.github.tomakehurst:wiremock:2.8.0"
    testCompile "org.assertj:assertj-core:3.6.2"
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.2.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}

//fat jar
jar {
    manifest {
        attributes 'Main-Class': 'com.equalexperts.slack.gardener.MainKt'
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}